{"version":3,"sources":["components/InputSize.js","components/Table.js","components/App.js","reportWebVitals.js","index.js"],"names":["InputSize","props","useState","total","lona","enrolle","caracola","vuelo","nodes","handleChange","event","calculo","runData","target","name","value","trim","nodesKey","console","log","setDatos","data","className","Form","Group","Label","Control","type","placeholder","onChange","disabled","Table","scope","App","datos","cofreGaviota","toldo","result","Object","keys","forEach","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55e78636.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form} from 'react-bootstrap';\r\nimport '../css/InputSize.css';\r\n\r\n\r\n\r\n\r\nconst InputSize = function (props) {\r\n\r\n    const [nodes, setNodes] = useState({total: false, lona: false, enrolle: false, caracola: false, vuelo: false});\r\n\r\n    const handleChange = (event) => {\r\n        let calculo = props.runData(\"cofreGaviota\", event.target.name, +event.target.value.trim() || 0);\r\n        console.log(calculo)\r\n        props.setDatos({...props.data, total : calculo.total, lona : calculo.lona, enrolle: calculo.enrolle, caracola : calculo.caracola, vuelo: calculo.vuelo});\r\n        for (let nodesKey in nodes) {\r\n            nodes[nodesKey] = nodesKey !== event.target.name && event.target.value.trim();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <Form className=\"d-flex\">\r\n                        <Form.Group className=\"m-3\">\r\n                            <Form.Label>Total</Form.Label>\r\n                            <Form.Control\r\n                                name=\"total\"\r\n                                type=\"number\"\r\n                                placeholder=\"Total\"\r\n                                onChange={handleChange}\r\n                                disabled={nodes.total}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"m-3\">\r\n                            <Form.Label>Lona</Form.Label>\r\n                            <Form.Control\r\n                                name=\"lona\"\r\n                                type=\"number\"\r\n                                placeholder=\"Lona\"\r\n                                onChange={handleChange}\r\n                                disabled={nodes.lona}\r\n                            />\r\n                        </Form.Group>\r\n                <Form.Group className=\"m-3\">\r\n                    <Form.Label>Enrolle</Form.Label>\r\n                    <Form.Control\r\n                        name=\"enrolle\"\r\n                        type=\"number\"\r\n                        placeholder=\"Enrolle\"\r\n                        onChange={handleChange}\r\n                        disabled={nodes.enrolle}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"m-3\">\r\n                    <Form.Label>Caracola</Form.Label>\r\n                    <Form.Control\r\n                        name=\"caracola\"\r\n                        type=\"number\"\r\n                        placeholder=\"Caracola\"\r\n                        onChange={handleChange}\r\n                        disabled={nodes.caracola}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"m-3\">\r\n                    <Form.Label>Vuelo</Form.Label>\r\n                    <Form.Control\r\n                        name=\"vuelo\"\r\n                        type=\"number\"\r\n                        placeholder=\"Vuelo\"\r\n                        onChange={handleChange}\r\n                        disabled={nodes.vuelo}\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSize;\r\n","import React, {useState} from \"react\";\r\nimport '../css/Table.css';\r\n\r\nconst Table = (props) => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center p-5\">\r\n            <table className=\"table text-white\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Total</th>\r\n                    <th scope=\"col\">Lona</th>\r\n                    <th scope=\"col\">Enrolle</th>\r\n                    <th scope=\"col\">Caracola</th>\r\n                    <th scope=\"col\">Vuelo</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>{props.total}</td>\r\n                    <td>{props.lona}</td>\r\n                    <td>{props.enrolle}</td>\r\n                    <td>{props.caracola}</td>\r\n                    <td>{props.vuelo}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default Table;","import {useState} from 'react';\r\nimport '../css/App.css';\r\nimport InputSize from './InputSize';\r\nimport Table from './Table';\r\n\r\n\r\nfunction App() {\r\n    const [datos, setDatos] = useState({\r\n        total: 0,\r\n        lona: 0,\r\n        enrolle: 0,\r\n        caracola: 0,\r\n        vuelo: 0\r\n    });\r\n    const data = {\r\n        cofreGaviota: {\r\n            total: {\r\n                total: 0,\r\n                lona: -17,\r\n                enrolle: -15.5,\r\n                caracola: -16.5,\r\n                vuelo: -16.5\r\n            },\r\n            lona: {\r\n                total: 17,\r\n                lona: 0,\r\n                enrolle: 1.5,\r\n                caracola: 0.5,\r\n                vuelo: 0.5\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const runData =  (toldo, name, value) => {\r\n        let result = data[toldo][name];\r\n        Object.keys(result).forEach((val) =>result[val] = result[val]+value);\r\n        return result;\r\n    }\r\n    console.log(datos);\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            <section className=\"\">\r\n                <InputSize setDatos={setDatos} data={datos} runData={runData}/>\r\n            </section>\r\n            <section className=\"table\">\r\n                <Table total={datos.total} lona={datos.lona} enrolle={datos.enrolle}\r\n                       caracola={datos.caracola} vuelo={datos.vuelo}/>\r\n            </section>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}