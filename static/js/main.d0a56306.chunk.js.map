{"version":3,"sources":["components/InputSize.js","components/Table.js","components/Button.js","components/App.js","reportWebVitals.js","index.js"],"names":["InputSize","props","useState","typeToldo","setTypeToldo","isDisableSelect","setDisableSelect","total","lona","enrolle","caracola","vuelo","nodes","setNodes","handleChange","event","name","target","value","trim","calculo","runData","nodesKey","setDatos","data","className","Form","Group","Label","Control","as","onChange","disabled","selected","toldos","map","tol","type","placeholder","Table","scope","Button","variant","onClick","alert","App","datos","cofreGaviota","cofreBat","console","log","toldo","valueIn","result","Object","keys","forEach","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a56306.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form} from 'react-bootstrap';\r\nimport '../css/InputSize.css';\r\n\r\n\r\nconst InputSize = function (props) {\r\n\r\n    const [typeToldo, setTypeToldo] = useState(\"\");\r\n    const [isDisableSelect, setDisableSelect] = useState(false);\r\n    const [nodes, setNodes] = useState({\r\n        total: true,\r\n        lona: true,\r\n        enrolle: true,\r\n        caracola: true,\r\n        vuelo: true\r\n    });\r\n    const handleChangeSelect = (event) => {\r\n        const value = event.target.value;\r\n        setTypeToldo(value);\r\n        value && setNodes({\r\n            total: false,\r\n            lona: false,\r\n            enrolle: false,\r\n            caracola: false,\r\n            vuelo: false\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = + event.target.value.trim() || 0;\r\n\r\n        let calculo = props.runData(typeToldo, name, value);\r\n\r\n        props.setDatos({\r\n            ...props.data,\r\n            total: calculo.total,\r\n            lona: calculo.lona,\r\n            enrolle: calculo.enrolle,\r\n            caracola: calculo.caracola,\r\n            vuelo: calculo.vuelo\r\n        });\r\n        for (let nodesKey in nodes) {\r\n            nodes[nodesKey] = nodesKey !== name && value;\r\n        }\r\n\r\n        setDisableSelect(value > 0);\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <Form className=\"d-flex flex-column justify-content-around align-items-center\" >\r\n\r\n                        <Form.Group className=\"m-3 selectToldo\">\r\n                            <Form.Label>Tipo de toldo</Form.Label>\r\n                            <Form.Control as=\"select\" name=\"toldo\"\r\n                                          onChange={handleChangeSelect}\r\n                                          disabled={isDisableSelect}\r\n                            >\r\n                                <option key=\"default\" disabled selected>Elige un tipo de toldo</option>\r\n                                {props.data.toldos.map( tol => <option key={tol}>{tol}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                <div className=\"d-flex\">\r\n                    <Form.Group className=\"m-3\">\r\n                        <Form.Label>Total</Form.Label>\r\n                        <Form.Control\r\n                            name=\"total\"\r\n                            type=\"number\"\r\n                            placeholder=\"Total\"\r\n                            onChange={handleChange}\r\n                            disabled={nodes.total}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"m-3\">\r\n                        <Form.Label>Lona</Form.Label>\r\n                        <Form.Control\r\n                            name=\"lona\"\r\n                            type=\"number\"\r\n                            placeholder=\"Lona\"\r\n                            onChange={handleChange}\r\n                            disabled={nodes.lona}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"m-3\">\r\n                        <Form.Label>Enrolle</Form.Label>\r\n                        <Form.Control\r\n                            name=\"enrolle\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enrolle\"\r\n                            onChange={handleChange}\r\n                            disabled={nodes.enrolle}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"m-3\">\r\n                        <Form.Label>Caracola</Form.Label>\r\n                        <Form.Control\r\n                            name=\"caracola\"\r\n                            type=\"number\"\r\n                            placeholder=\"Caracola\"\r\n                            onChange={handleChange}\r\n                            disabled={nodes.caracola}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"m-3\">\r\n                        <Form.Label>Vuelo</Form.Label>\r\n                        <Form.Control\r\n                            name=\"vuelo\"\r\n                            type=\"number\"\r\n                            placeholder=\"Vuelo\"\r\n                            onChange={handleChange}\r\n                            disabled={nodes.vuelo}\r\n                        />\r\n                    </Form.Group></div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSize;\r\n","import React, {useState} from \"react\";\r\nimport '../css/Table.css';\r\n\r\nconst Table = (props) => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center p-5\">\r\n            <table className=\"table text-white\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Total</th>\r\n                    <th scope=\"col\">Lona</th>\r\n                    <th scope=\"col\">Enrolle</th>\r\n                    <th scope=\"col\">Caracola</th>\r\n                    <th scope=\"col\">Vuelo</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    <td>{props.total}</td>\r\n                    <td>{props.lona}</td>\r\n                    <td>{props.enrolle}</td>\r\n                    <td>{props.caracola}</td>\r\n                    <td>{props.vuelo}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default Table;","import {Button} from 'react-bootstrap';\r\nimport '../css/Button.css';\r\n\r\n\r\nexport default (props) =>{\r\n\r\n    const handleClick = (event) => {\r\n        alert(\"Aún no tiene funcionalidad\");\r\n    }\r\n\r\n\r\n    return <div className=\"d-flex flex-column justify-content-around align-items-center m-3\">\r\n        <Button className=\"btnSave\" variant=\"danger\" onClick={handleClick}>Guardar medidas</Button>\r\n    </div>\r\n}","import {useState} from 'react';\r\nimport '../css/App.css';\r\nimport InputSize from './InputSize';\r\nimport Table from './Table';\r\nimport Button from './Button';\r\n\r\n\r\nfunction App() {\r\n    const [datos, setDatos] = useState({\r\n        total: 0,\r\n        lona: 0,\r\n        enrolle: 0,\r\n        caracola: 0,\r\n        vuelo: 0,\r\n        toldos: [\"cofreGaviota\", \"cofreBat\"]\r\n    });\r\n    const data = {\r\n        cofreGaviota: {\r\n            total: {\r\n                total: 0,\r\n                lona: -17,\r\n                enrolle: -15.5,\r\n                caracola: -16.5,\r\n                vuelo: -16.5\r\n            },\r\n            lona: {\r\n                total: 17,\r\n                lona: 0,\r\n                enrolle: 1.5,\r\n                caracola: 0.5,\r\n                vuelo: 0.5\r\n            }\r\n        },\r\n        cofreBat: {\r\n            total: {\r\n                total: 0,\r\n                lona: -17,\r\n                enrolle: -15.5,\r\n                caracola: -16.5,\r\n                vuelo: -16.5\r\n            },\r\n            lona: {\r\n                total: 17,\r\n                lona: 0,\r\n                enrolle: 1.5,\r\n                caracola: 0.5,\r\n                vuelo: 0.5\r\n            }\r\n        }\r\n    }\r\n\r\n    const runData = (toldo, name, valueIn) => {\r\n        console.log(\"runData\");\r\n        console.log(toldo);\r\n        console.log(name);\r\n        console.log(valueIn);\r\n        let result = data[toldo][name];\r\n        Object.keys(result).forEach((key) => result[key] = valueIn > 0 ? result[key] + valueIn : 0);\r\n        return result;\r\n    }\r\n    console.log(datos);\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            <InputSize setDatos={setDatos} data={datos} runData={runData}/>\r\n\r\n            <Table className=\"table\" total={datos.total} lona={datos.lona} enrolle={datos.enrolle}\r\n                   caracola={datos.caracola} vuelo={datos.vuelo}/>\r\n\r\n            <Button/>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}